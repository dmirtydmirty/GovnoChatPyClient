name: Release on tag
on:
  create:
    tags:
      - v*
      
jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
          python-version: ${{ matrix.python-version }}
          
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Set up 7zip
      uses: milliewalky/setup-7-zip@v1

    - name: Install dependencies
      run: python -m pip install --upgrade pip pyinstaller

    - name: Build executable
      run: pyinstaller --noconsole --onefile client.py 

    - name: Create release artifact
      run: |
        mkdir release
        copy dist\client.exe release\
        copy srv.json release\
        7z a GovnoChatPyClient-win-${{ github.ref_name }}.7z release
          
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-artifact-win
        path: GovnoChatPyClient-win-${{ github.ref_name }}.7z
            

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
          python-version: ${{ matrix.python-version }}
          
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: python -m pip install --upgrade pip pyinstaller

    - name: Build executable
      run: pyinstaller --noconsole --onefile client.py 

    - name: Create release artifact
      run: |
        mkdir release
        cp dist/client release/
        cp srv.json release/
        tar -czvf GovnoChatPyClient-lin-${{ github.ref_name }}.tar.gz release

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-artifact-lin
        path: GovnoChatPyClient-lin-${{ github.ref_name }}.tar.gz

  build-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
          python-version: ${{ matrix.python-version }}
          
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: python -m pip install --upgrade pip pyinstaller

    - name: Build executable
      run: pyinstaller --noconsole --onefile client.py 

    - name: Create release artifact
      run: |
        mkdir release
        cp dist/client release/
        cp srv.json release/
        tar -czvf GovnoChatPyClient-mac-${{ github.ref_name }}.tar.gz release

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-artifact-mac
        path: GovnoChatPyClient-mac-${{ github.ref_name }}.tar.gz


  publish-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact-lin
          path: ./

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact-win
          path: ./

      - name: Download MacOS artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact-mac
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: This is a release build.
          draft: false
          prerelease: false

      - name: Upload Linux artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./GovnoChatPyClient-lin-${{ github.ref_name }}.tar.gz
          asset_name: GovnoChatPyClient-lin-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-gzip

      - name: Upload MacOS artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./GovnoChatPyClient-mac-${{ github.ref_name }}.tar.gz
          asset_name: GovnoChatPyClient-mac-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-gzip

      - name: Upload Windows artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./GovnoChatPyClient-win-${{ github.ref_name }}.7z
          asset_name: GovnoChatPyClient-win-${{ github.ref_name }}.7z
          asset_content_type: application/x-7z-compressed
